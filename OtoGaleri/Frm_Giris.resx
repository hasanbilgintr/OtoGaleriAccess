<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +JEUPw3Gg+wAAAAASUVORK5CYII=
</value>
  </data>
</root>